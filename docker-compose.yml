version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aicode-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: aicode_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - aicode-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: aicode-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aicode-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    command: redis-server --appendonly yes --requirepass redis_password

  # API Service (Development)
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: aicode-api-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      HOST: 0.0.0.0
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/aicode_dev
      REDIS_URL: redis://:redis_password@redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: dev-jwt-refresh-secret-change-in-production
      LOG_LEVEL: debug
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - api_logs:/app/logs
    networks:
      - aicode-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "dist/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: aicode-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - aicode-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  api_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  aicode-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16